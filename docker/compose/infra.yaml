version: "3.9"

networks:
  default:
    driver: bridge

########################### SECRETS
secrets:
  SONARR__API_KEY:
    file: $SECRETSDIR/SONARR_API_KEY
  RADARR__API_KEY:
    file: $SECRETSDIR/RADARR_API_KEY


services:
  coder:
    container_name: coder
    image: ghcr.io/coder/coder:${CODER_VERSION:-latest}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    #network_mode: host
    environment:
      - ESPHOME_DASHBOARD_USE_PING=true
    ports:
      - "7080:7080"

  database:
    image: "postgres"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-username} # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password} # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: ${POSTGRES_DB:-coder} # The PostgreSQL default database (automatically created at first launch)
    volumes:
      - coder_data:/var/lib/postgresql/data # Use "docker volume rm coder_coder_data" to reset Coder
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-username} -d ${POSTGRES_DB:-coder}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  coder_data: